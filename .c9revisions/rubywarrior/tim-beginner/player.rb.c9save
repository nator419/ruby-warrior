{"ts":1375987227874,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class Player\n  def play_turn(warrior)\n    # add your code here\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":73}]],"length":73}
{"contributors":[],"silentsave":false,"ts":1375987267294,"patch":[[{"diffs":[[0,"de here\n"],[1,"    warrior.walk!\n"],[0,"  end\nen"]],"start1":55,"start2":55,"length1":16,"length2":34}]],"length":91,"saved":false}
{"ts":1375987786620,"patch":[[{"diffs":[[0,"    "],[-1,"warrior.walk!"],[1,"if warrior.feel.empty?\n        warrior.walk!\n    else\n        warrior.attack!\n    end    "],[0,"\n  e"]],"start1":63,"start2":63,"length1":21,"length2":97}]],"length":167,"saved":false}
{"ts":1375987791480,"patch":[[{"diffs":[[0," end\nend"],[-1,"\n"]],"start1":158,"start2":158,"length1":9,"length2":8}]],"length":166,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377026514865,"patch":[[{"diffs":[[0,"l.empty?"],[1," and warrior.health = 20"],[0,"\n       "]],"start1":81,"start2":81,"length1":16,"length2":40},{"diffs":[[0,"   else\n"],[1,"        if warrior.health < 10\n            warrior.rest!\n        else\n    "],[0,"        "]],"start1":137,"start2":137,"length1":16,"length2":90},{"diffs":[[0,"attack!\n"],[1,"        end\n"],[0,"    end "]],"start1":235,"start2":235,"length1":16,"length2":28}]],"length":276,"saved":false}
{"ts":1377027140835,"patch":[[{"diffs":[[0," Player\n"],[1,"    @health = 0\n  "],[0,"  def pl"]],"start1":5,"start2":5,"length1":16,"length2":34},{"diffs":[[0,"de here\n    "],[1,"   "],[1," "],[0,"if warrior.f"]],"start1":73,"start2":73,"length1":24,"length2":28},{"diffs":[[0,"lth "],[1,">"],[0,"= "],[-1,"20\n"],[1,"@health\n    "],[0,"    "]],"start1":127,"start2":127,"length1":13,"length2":23},{"diffs":[[0,"r.walk!\n"],[1,"    "],[0,"    else"]],"start1":160,"start2":160,"length1":16,"length2":20},{"diffs":[[0,"   else\n        "],[1,"  "],[1,"  "],[0,"if warrior.healt"]],"start1":173,"start2":173,"length1":32,"length2":36},{"diffs":[[0,"ior."],[-1,"health < 10\n"],[1,"feel.empty?\n    "],[0,"    "]],"start1":200,"start2":200,"length1":20,"length2":24},{"diffs":[[0,"r.rest!\n        "],[1,"    "],[0,"else\n           "]],"start1":238,"start2":238,"length1":32,"length2":36},{"diffs":[[0,"lse\n            "],[1,"   "],[1," "],[0,"warrior.attack!\n"]],"start1":259,"start2":259,"length1":32,"length2":36},{"diffs":[[0,"    "],[1,"    "],[0,"end\n    "],[1,"  "],[1,"  "],[0,"end    \n"],[1,"    @health = warrior.health\n  "],[0,"  en"]],"start1":299,"start2":299,"length1":24,"length2":63}]],"length":367,"saved":false}
{"ts":1377027339432,"patch":[[{"diffs":[[0,"yer\n"],[-1,"    @health = 0\n"],[0,"    "]],"start1":9,"start2":9,"length1":24,"length2":8}]],"length":351,"saved":false}
{"ts":1377027594141,"patch":[[{"diffs":[[0," Player\n"],[1,"    @health = warrior.health\n"],[0,"    def "]],"start1":5,"start2":5,"length1":16,"length2":45}]],"length":380,"saved":false}
{"ts":1377027661516,"patch":[[{"diffs":[[0,"yer\n"],[-1,"    @health = warrior.health\n"],[0,"    "]],"start1":9,"start2":9,"length1":37,"length2":8},{"diffs":[[0,"de here\n    "],[1,"@health = warrior.health\n"],[0,"    if warri"]],"start1":57,"start2":57,"length1":24,"length2":49}]],"length":376,"saved":false}
{"ts":1377027714898,"patch":[[{"diffs":[[0,"arrior)\n"],[1,"    "],[0,"    # ad"]],"start1":32,"start2":32,"length1":16,"length2":20},{"diffs":[[0,"de here\n    "],[1,"  "],[1,"  "],[0,"@health = wa"]],"start1":61,"start2":61,"length1":24,"length2":28},{"diffs":[[0,"rior.health\n"],[1,"    "],[0,"    if warri"]],"start1":90,"start2":90,"length1":24,"length2":28},{"diffs":[[0,"end    \n"],[1,"    "],[0,"    @hea"]],"start1":340,"start2":340,"length1":16,"length2":20}]],"length":392,"saved":false}
{"ts":1377027872913,"patch":[[{"diffs":[[0,"e here\n        @"],[1,"current"],[0,"health = warrior"]],"start1":62,"start2":62,"length1":32,"length2":39},{"diffs":[[0,"ty? and "],[-1,"warrior."],[1,"current"],[0,"health >"]],"start1":136,"start2":136,"length1":24,"length2":23},{"diffs":[[0,"end    \n    "],[1,"end\n"],[0,"    @health "]],"start1":346,"start2":346,"length1":24,"length2":28},{"diffs":[[0,".health\n"],[-1,"    end\n"],[0,"end"]],"start1":383,"start2":383,"length1":19,"length2":11}]],"length":394,"saved":false}
{"ts":1377027899931,"patch":[[{"diffs":[[0,"end    \n"],[-1,"    end\n"],[0,"    @hea"]],"start1":346,"start2":346,"length1":24,"length2":16},{"diffs":[[0,".health\n"],[1,"    end\n"],[0,"end"]],"start1":375,"start2":375,"length1":11,"length2":19}]],"length":394,"saved":false}
{"ts":1377028005197,"patch":[[{"diffs":[[0,"ty? and "],[1,"@"],[0,"currenth"]],"start1":136,"start2":136,"length1":16,"length2":17}]],"length":395,"saved":false}
{"ts":1377028069797,"patch":[[{"diffs":[[0,"rior.health\n"],[1,"        @health = warrior.health\n"],[0,"        if w"]],"start1":97,"start2":97,"length1":24,"length2":57}]],"length":428,"saved":false}
{"ts":1377028083974,"patch":[[{"diffs":[[0,"end    \n"],[1,"    "],[0,"    @hea"]],"start1":380,"start2":380,"length1":16,"length2":20}]],"length":432,"saved":false}
{"ts":1377028250433,"patch":[[{"diffs":[[0,"l.empty?"],[1," and @currenthealth <= 6"],[0,"\n       "]],"start1":268,"start2":268,"length1":16,"length2":40}]],"length":456,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377028978731,"patch":[[{"diffs":[[0,"r\n  "],[-1,"  def play_turn(warrior)\n        # add your code here\n        @currenthealth = warrior.health\n        @health = warrior.health\n        if warrior.feel.empty? and @currenthealth >= @health"],[1,"def initialize\n    @dying_health  = 8\n    @severe_health = 13\n    @max_health    = 20\n    @last_health   = 20\n    @direction     = :forward\n    @retreating    = false\n  end\n\n  def play_turn(warrior)\n    setup warrior\n\n    next_action = pick_action\n    until next_action[-1] == \"!\"\n      update next_action\n      next_action = pick_action\n    end\n\n    perform next_action\n\n    cleanup\n  end\n\n\n  private\n    attr_reader :w, :dying_health, :max_health, :last_health, :severe_health, :direction\n\n    def setup warrior\n      @w = warrior\n      @healable = true\n    end\n\n    def cleanup\n      @last_health = w.health\n    end\n\n    def pick_action\n      if retreating?\n        if taking_damage?\n          :walk!\n        elsif not injured?\n          :end_retreat\n        else\n          heal\n        end\n      elsif feel.enemy?\n        :attack!\n      elsif contains? :backward, \"captive\"\n        :pivot!\n      elsif feel.empty?\n        if severe? and healable? and first_nonempty_space != \"wizard\"\n          heal\n        elsif dying? and not healable? and two_empty_spaces(:backward)\n          :begin_retreat\n        else\n          if first_nonempty_space == \"wizard\"\n            :shoot!\n          elsif first_nonempty_space == \"archer\""],[0,"\n   "]],"start1":11,"start2":11,"length1":195,"length2":1234},{"diffs":[[0,"        "],[1,":"],[0,"wa"],[-1,"rrior."],[1,"lk!\n          elsif first_nonempty_space == \"captive\"\n            :"],[0,"walk!\n  "]],"start1":1246,"start2":1246,"length1":24,"length2":86},{"diffs":[[0," :walk!\n        "],[1,"  "],[0,"else\n           "]],"start1":1322,"start2":1322,"length1":32,"length2":34},{"diffs":[[0,"    "],[-1,"if warrior.feel.empty? and @currenthealth <= 6\n                warrior.rest!\n            else\n                warrior.attack!\n        "],[1,":walk!\n          end\n        end\n      elsif feel.captive?\n        :rescue!\n      elsif feel.wall?\n        :pivot!\n      end\n    end\n\n    def update action\n      case action\n      when :not_healable\n        @healable = false\n      when :turn_around\n        turn\n      when :begin_retreat\n        turn\n        @retreating = true\n      when :end_retreat\n        turn\n        @retreating = false\n      end\n    end\n\n    def retreating?\n      @retreating\n    end\n\n    def contains? dir=direction, type\n      (look dir).include? type\n    end\n\n    def feel\n      w.feel direction\n    end\n\n    def turn\n      if direction == :forward\n        @direction = :backward\n      else\n        @direction = :forward\n      end\n    end\n\n    def perform action, dir=direction\n      if %i[walk! attack! rescue!].include? action\n        w.send action, dir\n      else\n        w.send action\n      end\n    end\n\n    def look dir=direction\n      w.look(dir).map{|s| s.to_s.downcase}\n    end\n\n    def two_empty_spaces dir=:backward\n      l = look dir\n      l[0] == \"nothing\" and l[1] == \"nothing\"\n"],[0,"    end\n"],[1,"\n"],[0,"    "],[-1,""],[0,""],[1,"def first_nonempty_space\n      look.find { |s| s != \"nothing\" }\n"],[0,"    end"],[1,"\n\n"],[0,"    "],[-1,"\n        @health = warrior."],[1,"def dying?\n      w.health < dying_health\n    end\n\n    def injured?\n      w.health < max_health\n    end\n\n    def severe?\n      w.health < severe_health\n    end\n\n    def heal\n      (injured? and not taking_damage?) ? :rest! : :not_healable\n    end\n\n    def healable?\n      @healable\n    end\n\n    def taking_damage?\n      w.health < last_"],[0,"heal"]],"start1":1353,"start2":1353,"length1":192,"length2":1501}]],"length":2868,"saved":false}
{"ts":1377029120044,"patch":[[{"diffs":[[0,"r\n  "],[-1,"def initialize\n    @dying_health  = 8\n    @severe_health = 13\n    @max_health    = 20\n    @last_health   = 20\n    @direction     = :forward\n    @retreating    = false\n  end\n\n  def play_turn(warrior)\n    setup warrior\n\n    next_action = pick_action\n    until next_action[-1] == \"!\"\n      update next_action\n      next_action = pick_action\n    end\n\n    perform next_action\n\n    cleanup\n  end\n\n\n  private\n    attr_reader :w, :dying_health, :max_health, :last_health, :severe_health, :direction\n\n    def setup warrior\n      @w = warrior\n      @healable = true\n    end\n\n    def cleanup\n      @last_health = w.health\n    end\n\n    def pick_action\n      if retreating?\n        if taking_damage?\n          :walk!\n        elsif not injured?\n          :end_retreat\n        else\n          heal\n        end\n      elsif feel.enemy?\n        :attack!\n      elsif contains? :backward, \"captive\"\n        :pivot!\n      elsif feel.empty?\n        if severe? and healable? and first_nonempty_space != \"wizard\"\n          heal\n        elsif dying? and not healable? and two_empty_spaces(:backward)\n          :begin_retreat\n        else\n          if first_nonempty_space == \"wizard\"\n            :shoot!\n          elsif first_nonempty_space == \"archer\""],[1,"  def play_turn(warrior)\n        # add your code here\n        @currenthealth = warrior.health\n        @health = warrior.health\n        if warrior.feel.empty? and @currenthealth >= @health"],[0,"\n   "]],"start1":11,"start2":11,"length1":1234,"length2":195},{"diffs":[[0,"    "],[-1,":"],[0,"wa"],[-1,"lk!\n          elsif first_nonempty_space == \"captive\"\n            :"],[1,"rrior."],[0,"walk"]],"start1":211,"start2":211,"length1":78,"length2":16},{"diffs":[[0,"lk!\n        "],[-1,"  "],[0,"else\n       "]],"start1":225,"start2":225,"length1":26,"length2":24},{"diffs":[[0,"    "],[-1,":walk!\n          end\n        end\n      elsif feel.captive?\n        :rescue!\n      elsif feel.wall?\n        :pivot!\n      end\n    end\n\n    def update action\n      case action\n      when :not_healable\n        @healable = false\n      when :turn_around\n        turn\n      when :begin_retreat\n        turn\n        @retreating = true\n      when :end_retreat\n        turn\n        @retreating = false\n      end\n    end\n\n    def retreating?\n      @retreating\n    end\n\n    def contains? dir=direction, type\n      (look dir).include? type\n    end\n\n    def feel\n      w.feel direction\n    end\n\n    def turn\n      if direction == :forward\n        @direction = :backward\n      else\n        @direction = :forward\n      end\n    end\n\n    def perform action, dir=direction\n      if %i[walk! attack! rescue!].include? action\n        w.send action, dir\n      else\n        w.send action\n      end\n    end\n\n    def look dir=direction\n      w.look(dir).map{|s| s.to_s.downcase}\n    end\n\n    def two_empty_spaces dir=:backward\n      l = look dir\n      l[0] == \"nothing\" and l[1] == \"nothing\"\n"],[1,"if warrior.feel.empty? and @currenthealth <= 6\n                warrior.rest!\n            else\n                warrior.attack!\n        "],[0,"    end\n"],[-1,"\n"],[0,"    "],[-1,"def first_nonempty_space\n      look.find { |s| s != \"nothing\" }\n"],[0,""],[1,""],[0,"    end"],[-1,"\n\n"],[0,"    "],[-1,"def dying?\n      w.health < dying_health\n    end\n\n    def injured?\n      w.health < max_health\n    end\n\n    def severe?\n      w.health < severe_health\n    end\n\n    def heal\n      (injured? and not taking_damage?) ? :rest! : :not_healable\n    end\n\n    def healable?\n      @healable\n    end\n\n    def taking_damage?\n      w.health < last_"],[1,"\n        @health = warrior."],[0,"heal"]],"start1":250,"start2":250,"length1":1501,"length2":192}]],"length":456,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377192242459,"patch":[[{"diffs":[[0,"def "],[-1,"play_turn(warrior)\n        # add your code here"],[1,"initialize\n        @dying_health  = 8"],[0,"\n   "]],"start1":17,"start2":17,"length1":55,"length2":45},{"diffs":[[0,"       @"],[-1,"current"],[1,"severe_"],[0,"health ="]],"start1":60,"start2":60,"length1":23,"length2":23},{"diffs":[[0,"re_health = "],[-1,"warrior.health"],[1,"13\n        @max_health    = 20"],[0,"\n        @he"]],"start1":72,"start2":72,"length1":38,"length2":54},{"diffs":[[0,"       @"],[1,"last_"],[0,"health "],[1,"  "],[0,"= "],[-1,"warrior.health"],[1,"20\n        @direction     = :forward\n        @retreating    = false\n    end\n    def play_turn(warrior)\n        # add your code here"],[0,"\n       "]],"start1":116,"start2":116,"length1":39,"length2":163},{"diffs":[[0,"nd @"],[-1,"current"],[1,"last_"],[0,"health "],[-1,">"],[0,"= @"],[1,"max_"],[0,"heal"]],"start1":304,"start2":304,"length1":26,"length2":27},{"diffs":[[0,"nd @"],[-1,"current"],[1,"last_"],[0,"heal"]],"start1":409,"start2":409,"length1":15,"length2":13},{"diffs":[[0," <= "],[-1,"6"],[1,"@dying_health"],[0,"\n   "]],"start1":424,"start2":424,"length1":9,"length2":21},{"diffs":[[0,"   \n    "],[-1,"    @"],[1,"end\n    def cleanup\n        @last_"],[0,"health ="]],"start1":549,"start2":549,"length1":21,"length2":50}]],"length":626,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377793711715,"patch":[[{"diffs":[[0,"def "],[-1,"initialize\n        @dying_health  = 8\n        @severe_health = 13\n        @max_health    = 20\n        @last_health   = 20\n        @direction     = :forward\n        @retreating    = false\n    end\n    def play_turn(warrior)\n        # add your code here\n        if warrior.feel.empty? and @last_health = @max_health\n            warrior.walk!\n        else\n            if warrior.feel.empty? and @last_health <= @dying_health\n                warrior.rest!\n            else\n                warrior.attack!\n            end\n        end    \n    end\n    def cleanup\n        @last_health = warrior.health"],[1,"play_turn(warrior)\n        # add your code here\n        if warrior.feel.empty? and @last_health = @max_health\n            warrior.walk!\n        end    "],[0,"\n   "]],"start1":17,"start2":17,"length1":601,"length2":159}]],"length":184,"saved":false}
{"ts":1377793801184,"patch":[[{"diffs":[[0,"pty?"],[-1," and @last_health = @max_health"],[0,"\n   "]],"start1":95,"start2":95,"length1":39,"length2":8}]],"length":153,"saved":false}
